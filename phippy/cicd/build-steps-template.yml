steps:
- bash: |
    docker build \
        -f $(system.defaultWorkingDirectory)/$(projectName)/Dockerfile \
        -t $(registryServerName)/$(imageName):$(build.buildId) \
        $(system.defaultWorkingDirectory)/$(projectName)
  displayName: 'docker build'
- bash: |
    docker login \
        $(registryServerName) \
        -u $(registryLogin) \
        -p $(registryPassword)
    docker push $(registryServerName)/$(imageName):$(build.buildId)
  displayName: 'docker push'
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
#- task: HelmInstaller@0
#  displayName: 'install helm'
#  inputs:
#    helmVersion: $(helmVersion)
#    checkLatestHelmVersion: false
- bash: |
    helm init \
        --client-only
    helm package \
        --version $(build.buildId) \
        --destination $(build.artifactStagingDirectory) \
        $(system.defaultWorkingDirectory)/$(projectName)/charts/$(projectName)
  displayName: 'helm package'
- bash: |
    az acr helm push \
        -n $(registryName) \
        -u $(registryLogin) \
        -p $(registryPassword) \
        $(build.artifactStagingDirectory)/$(projectName)-$(build.buildId).tgz
  displayName: 'az acr helm push'
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
